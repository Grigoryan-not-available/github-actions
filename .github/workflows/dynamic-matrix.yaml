name: Dynamic matrix
on:
  workflow_dispatch:
    inputs:
      os:
        description: OS
        default: "ubuntu-latest,windows-latest,macos-latest"
        type: string
      node-version:
        description: Node version
        default: "16,17,18"
        type: string

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix-os: ${{ steps.set-os-output.outputs.os }}
      matrix-node-version: ${{ steps.set-node-version-output.outputs.node-version }}
    steps:
      - name: Prepare os parameter for matrix
        id: set-os-output
        run: echo "os=$(python3 -c "print(','.join('${{ inputs.os }}'.split(',')))")" >> $GITHUB_ENV
      - name: Prepare node version parameter for matrix
        id: set-node-version-output
        run: echo "node-version=$(python3 -c "print(','.join('${{ inputs.node-version }}'.split(',')))")" >> $GITHUB_ENV
      - name: Set output for OS
        id: step-os
        run: echo "step-output=value" >> $GITHUB_OUTPUT
      - name: Set output for OS
        id: step-node-version
        run: echo "step-output=value 2" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo "${{ steps.step-os.outputs.step-output }}"
          echo "${{ steps.step-node-version.outputs.step-output }}"
          echo "${{ steps.set-os-output.outputs.os }}"
          echo "${{ steps.set-node-version-output.outputs.node-version }}"

  node-matrix:
    needs: prepare-matrix
    strategy: 
      matrix:
        node-version: [16, 17, 18]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Node version
        run: node -v 
      - name: Setup Node.js environment
        uses: actions/setup-node@5ef044f9d09786428e6e895be6be17937becee3a
        with:
          node-version: ${{ matrix.node-version }}
      - run: node -v
    